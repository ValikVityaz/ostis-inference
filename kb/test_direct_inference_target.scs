@link0 = [Все стороны квадрата равны друг другу и все его углы - прямые];;
nrel_side <- sc_node_norole_relation;;
concept_quadrangle <- sc_node_class;;
_x <- sc_node;;
_a <- sc_node;;
_c <- sc_node;;
concept_segment <- sc_node_class;;
_b <- sc_node;;
_d <- sc_node;;
concept_right_angle <- sc_node_class;;
_angle1 <- sc_node;;
_angle4 <- sc_node;;
_b <- sc_node;;
_angle2 <- sc_node;;
_c <- sc_node;;
.._node0 <- sc_node_class;;
_a <- sc_node;;
concept_length <- sc_node_class;;
nrel_angle <- sc_node_norole_relation;;
_angle3 <- sc_node;;
_x <- sc_node;;
nrel_side <- sc_node_norole_relation;;
concept_square <- sc_node_class;;
_d <- sc_node;;
_y <- sc_node;;
concept_rhombus <- sc_node_class;;
_x <- sc_node;;
concept_quadrangle <- sc_node_class;;
concept_square <- sc_node_class;;
@link0 <- sc_link;;
@test_simple_direct_inference_target = [*
	@pair0 = (_x _=> _c);;
	@pair1 = (_x _=> _b);;
	@pair2 = (_x _=> _a);;
	@pair3 = (_x _=> _d);;
	@pair4 = (concept_segment _-> _b);;
	@pair5 = (concept_segment _-> _c);;
	@pair6 = (nrel_side _-> @pair0);;
	@pair7 = (nrel_side _-> @pair3);;
	@pair8 = (concept_segment _-> _d);;
	@pair9 = (nrel_side _-> @pair1);;
	@pair10 = (concept_segment _-> _a);;
	@pair11 = (nrel_side _-> @pair2);;
	@pair12 = (concept_quadrangle _-> _x);;
*];;
@test_direct_inference_target = [*
	@pair13 = (_x _=> _angle2);;
	@pair14 = (_x _=> _angle1);;
	@pair15 = (_x _=> _angle3);;
	@pair16 = (_x _=> _angle4);;
	@pair17 = (_x _=> _c);;
	@pair18 = (_x _=> _b);;
	@pair19 = (_x _=> _d);;
	@pair20 = (_x _=> _a);;
	@pair21 = (concept_right_angle _-> _angle3);;
	@pair22 = (concept_right_angle _-> _angle4);;
	@pair23 = (nrel_angle _-> @pair14);;
	@pair24 = (concept_right_angle _-> _angle1);;
	@pair25 = (nrel_angle _-> @pair13);;
	@pair26 = (concept_right_angle _-> _angle2);;
	@pair27 = (nrel_angle _-> @pair15);;
	@pair28 = (concept_square _-> _x);;
	@pair29 = (.._node0 _-> _c);;
	@pair30 = (nrel_side _-> @pair19);;
	@pair31 = (nrel_side _-> @pair17);;
	@pair32 = (nrel_side _-> @pair18);;
	@pair33 = (nrel_side _-> @pair20);;
	@pair34 = (.._node0 _-> _a);;
	@pair35 = (concept_length _-> .._node0);;
	@pair36 = (.._node0 _-> _b);;
	@pair37 = (.._node0 _-> _d);;
	@pair38 = (nrel_angle _-> @pair16);;
*];;
@test_direct_inference_multiple_rule_usage_and_multiple_arguments_target = [*
	@pair39 = (concept_square _-> _x);;
	@pair40 = (concept_rhombus _-> _x);;
	@pair41 = (concept_rhombus _-> _y);;
	@pair42 = (concept_square _-> _y);;
	@pair43 = (concept_quadrangle _-> _y);;
	@pair44 = (concept_quadrangle _-> _x);;
*];;
